

===ESTR_GPIO===

System primarily works around uut_gpio.c, the uut_gpio_init() sets up gpio data direction etc before registering 
the airspeed response interrupt and registering an airspeed stimulus task that performs the test. 

The stopwatch module is used to measure response times. one stopwatch instance is used, it is started in the 
RTOS airspeed task and stopped in the response interrupt. A flag (g_airspeed_response_flag) is also set in the task 
and reset in the interrupt. This is used to check 1:1 response.  

It is expected that the structure of this body will change significantly.


===ESTR_UART===


===PC_code===
This program loads tests on to the Stellaris by using "LM Flash Programmer"
from Texas Instruments. This loads the .bin files located in "testBins" to
the Stellaris. "deliverable3.py" assumes that the programmer is installed 
at "C:\LMFlash.exe". At the moment, uart.bin is the UART test, and gpio.bin 
is the GPIO test. These .bin files must be copied from the "Debug" folder 
generated by Code Composer Studio.

Inside a while loop, the code asks for the test number and then loads the
corresponding binary file to the Stellaris. Rinse and repeat. Currently, 
there is no UART support for deliverable three. 

In the future, UART communicatin will be implemented as well as a GUI. A
schedular may be imported to manage time-irregular UART communications and
user input. 



